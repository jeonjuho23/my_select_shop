name: CICD

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create application.properties
        run: |
          echo "${{ secrets.APPLICATION_PROPERTIES }}" > src/main/resources/application.properties

      - name: Java setup
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew clean build -x test

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: my-jar
          path: build/libs/MySelectShop-0.0.1-SNAPSHOT.jar

      - name: Upload Docker file
        uses: actions/upload-artifact@v4
        with:
          name: my-dockerfile
          path: Dockerfile

  integration:
    needs: build
    runs-on: [ ubuntu-latest ]
    steps:
      - name: Download JAR artifact
        uses: actions/download-artifact@v4
        with:
          name: my-jar
          path: build/libs/

      - name: Download Dockerfile artifact
        uses: actions/download-artifact@v4
        with:
          name: my-dockerfile
          path: /

      - name: Set up Docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/my-select-shop:latest .
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/my-select-shop:latest

  build_deploy:
    needs: integration
    runs-on: [ ubuntu-latest ]
    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Docker 실행 중인 컨테이너 중지
            sudo docker stop my-select-shop || true
            sudo docker rm my-select-shop || true

            # 최신 Docker 이미지 가져오기
            sudo docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/my-select-shop:latest

            # 컨테이너 실행
            sudo docker run -d --name my-select-shop -p 8080:8080 ${{ secrets.DOCKER_HUB_USERNAME }}/my-select-shop:latest